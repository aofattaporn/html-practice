
body { 
    padding: 0px;
    margin: 0px;
}
/*
    ต้องสร้าง grid-container ก่อนที่ปกคลุมส่วนต่างๆ 
    ใช้คำสั่ง display : grid; 

  ? gird-template-columns: กำหนดขนาดของแต่ละคอลัมล์;
  ? gird-template-rows: กำหนดขนาดของแต่ละแถว;

  ? gird-template-columns/rows: minmax(ขนาดที่เล้กที่สุด, ขนาดที่ใหย่ที่สุด);
  ? gird-template-columns/rows: repeat(ที่เท่าไหร่บ้างม, ขนาดของcolumn);

    / grid-items
    grid-column-start
    grid-column-end
    grid-row-start
    grid-row-end
    grid-column : [grid-column-start] / [grid-column-end];
    grid-row : [grid-row-start] / [grid-row-end];
    grid-arae: [grid-row-start] / [grid-column-start] / [grid-row-end] / [grid-column-end]
    gr-column/row : span [กำหนดระยะห่างจากจุดเรื่ม]; 

    การตั้งชื่อใน grid 
    grid-template-columns: [col_name] size [col_name] size  ...; 
    grid-template-rows: [row_name] size [row_name] size  ...; 
    or I can use difind name by repeat(); 
    grid-template-columns: repeat((number_repeat), [col_name] size [col_name_end); 
    grid-template-columns: repeat((number_repeat), [col_name] size [col_name_end); 




    


    การจัดตำแหน่งใน grid [block alignment]
    justtify-item : [start, center, ]
    align-item : [start, center, ]



*/
.grid-container { 
    display: grid;
    /* height: 500px; */
    /*display: inline-grid*/

    grid-template-columns: 250px  1fr ;
    grid-template-rows: repeat(3, 100px);
    grid-column-gap: 2px;



    background-color: mediumpurple;
    /* padding: 1em; */
}
.grid-items { 
    border: 1px solid white;
}
.grid1 { 
    grid-column: 1 / 4;
    grid-row: 1 / 2;
    /* padding-left: 200px; */
    text-align: center;
    padding-top: 20px;
}
/* .grid2 { 
    grid-row: 100px;
} */
.grid4 { 
    grid-column: 1 / 4;
}


